// <auto-generated />
using System;
using KitanoUserService.API.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace KitanoUserService.API.Migrations
{
    [DbContext(typeof(KitanoSqlContext))]
    [Migration("20220220164341_useraddcolumn")]
    partial class useraddcolumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.ApprovalConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ApprovalLevel")
                        .HasColumnType("integer")
                        .HasColumnName("approval_level");

                    b.Property<bool?>("IsOutside")
                        .HasColumnType("boolean")
                        .HasColumnName("is_outside");

                    b.Property<bool?>("IsShow")
                        .HasColumnType("boolean")
                        .HasColumnName("is_show");

                    b.Property<string>("StatusCode")
                        .HasColumnType("text")
                        .HasColumnName("status_code");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("text")
                        .HasColumnName("status_description");

                    b.Property<string>("StatusName")
                        .HasColumnType("text")
                        .HasColumnName("status_name");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("item_code")
                        .HasColumnType("text")
                        .HasColumnName("item_code");

                    b.Property<int?>("item_id")
                        .HasColumnType("integer");

                    b.Property<string>("item_name")
                        .HasColumnType("text")
                        .HasColumnName("item_name");

                    b.HasKey("id");

                    b.HasIndex("item_id");

                    b.ToTable("APPROVAL_CONFIG");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.ApprovalFunction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("approval_date");

                    b.Property<string>("FileType")
                        .HasColumnType("text")
                        .HasColumnName("file_type");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<string>("Reason")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<string>("StatusCode")
                        .HasColumnType("text")
                        .HasColumnName("status_code");

                    b.Property<string>("StatusName")
                        .HasColumnType("text")
                        .HasColumnName("status_name");

                    b.Property<int?>("approver")
                        .HasColumnType("integer");

                    b.Property<int?>("approver_last")
                        .HasColumnType("integer");

                    b.Property<string>("function_code")
                        .HasColumnType("text")
                        .HasColumnName("function_code");

                    b.Property<string>("function_name")
                        .HasColumnType("text")
                        .HasColumnName("function_name");

                    b.Property<int?>("item_id")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.HasKey("id");

                    b.HasIndex("approver");

                    b.HasIndex("approver_last");

                    b.ToTable("APPROVAL_FUNCTION_STATUS");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.ApprovalFunctionFile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("FileType")
                        .HasColumnType("text")
                        .HasColumnName("file_type");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<string>("function_code")
                        .HasColumnType("text")
                        .HasColumnName("function_code");

                    b.Property<string>("function_name")
                        .HasColumnType("text")
                        .HasColumnName("function_name");

                    b.Property<int?>("item_id")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.HasKey("id");

                    b.ToTable("APPROVAL_FUNCTION_FILE");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.AuditDetect", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("FileType")
                        .HasColumnType("text")
                        .HasColumnName("file_type");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("affect")
                        .HasColumnType("text")
                        .HasColumnName("affect");

                    b.Property<bool>("audit_report")
                        .HasColumnType("boolean")
                        .HasColumnName("audit_report");

                    b.Property<int?>("auditfacilities_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditfacilities_id");

                    b.Property<string>("auditfacilities_name")
                        .HasColumnType("text")
                        .HasColumnName("auditfacilities_name");

                    b.Property<int?>("auditprocess_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditprocess_id");

                    b.Property<string>("auditprocess_name")
                        .HasColumnType("text")
                        .HasColumnName("auditprocess_name");

                    b.Property<int?>("auditwork_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditwork_id");

                    b.Property<string>("auditwork_name")
                        .HasColumnType("text")
                        .HasColumnName("auditwork_name");

                    b.Property<string>("cause")
                        .HasColumnType("text")
                        .HasColumnName("cause");

                    b.Property<int?>("classify_audit_detect")
                        .HasColumnType("integer")
                        .HasColumnName("classify_audit_detect");

                    b.Property<string>("code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("evidence")
                        .HasColumnType("text")
                        .HasColumnName("evidence");

                    b.Property<int?>("flag_user_id")
                        .HasColumnType("integer")
                        .HasColumnName("flag_user_id");

                    b.Property<int?>("followers")
                        .HasColumnType("integer")
                        .HasColumnName("followers");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("opinion_audit")
                        .HasColumnType("boolean")
                        .HasColumnName("opinion_audit");

                    b.Property<string>("path_audit_detect")
                        .HasColumnType("text")
                        .HasColumnName("path_audit_detect");

                    b.Property<int?>("rating_risk")
                        .HasColumnType("integer")
                        .HasColumnName("rating_risk");

                    b.Property<string>("reason")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<string>("short_title")
                        .HasColumnType("text")
                        .HasColumnName("short_title");

                    b.Property<int?>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("summary_audit_detect")
                        .HasColumnType("text")
                        .HasColumnName("summary_audit_detect");

                    b.Property<string>("title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int?>("year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("id");

                    b.HasIndex("classify_audit_detect");

                    b.HasIndex("followers");

                    b.ToTable("AUDIT_DETECT");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.AuditPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("Browsedate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("browsedate");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<string>("FileType")
                        .HasColumnType("text")
                        .HasColumnName("file_type");

                    b.Property<bool?>("IsCopy")
                        .HasColumnType("boolean")
                        .HasColumnName("is_copy");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<string>("ReasonReject")
                        .HasColumnType("text")
                        .HasColumnName("reason_reject");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Target")
                        .HasColumnType("text")
                        .HasColumnName("target");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.Property<int?>("approval_user")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("approval_user");

                    b.ToTable("AUDIT_PLAN");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.AuditRequestMonitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("ActualCompleteAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("actual_complete_at");

                    b.Property<string>("Auditcomment")
                        .HasColumnType("text")
                        .HasColumnName("audit_comment");

                    b.Property<string>("Captaincomment")
                        .HasColumnType("text")
                        .HasColumnName("captain_comment");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CompleteAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("complete_at");

                    b.Property<int?>("Conclusion")
                        .HasColumnType("integer")
                        .HasColumnName("conclusion");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<int?>("CooperateUnitid")
                        .HasColumnType("integer")
                        .HasColumnName("co_operate_unit_id");

                    b.Property<string>("Evidence")
                        .HasColumnType("text")
                        .HasColumnName("evidence");

                    b.Property<string>("Leadercomment")
                        .HasColumnType("text")
                        .HasColumnName("leader_comment");

                    b.Property<int?>("ProcessStatus")
                        .HasColumnType("integer")
                        .HasColumnName("process_status");

                    b.Property<string>("Reason")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<int?>("TimeStatus")
                        .HasColumnType("integer")
                        .HasColumnName("time_status");

                    b.Property<string>("Unitcomment")
                        .HasColumnType("text")
                        .HasColumnName("unit_comment");

                    b.Property<int?>("auditrequesttypeid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("created_by")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("deleted_by")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("detect_code_new")
                        .HasColumnType("text")
                        .HasColumnName("detect_code_new");

                    b.Property<int?>("detectid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("extend_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("extend_at");

                    b.Property<bool>("flag")
                        .HasColumnType("boolean")
                        .HasColumnName("flag");

                    b.Property<bool?>("is_active")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("modified_by")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<int?>("unitid")
                        .HasColumnType("integer");

                    b.Property<int?>("userid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("detectid");

                    b.HasIndex("userid");

                    b.ToTable("AUDIT_REQUEST_MONITOR");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Category.CatAuditRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdat");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deletedat");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modifiedat");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("CAT_AUDIT_REQUEST");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Category.CatControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Activationid")
                        .HasColumnType("integer")
                        .HasColumnName("activationid");

                    b.Property<string>("ActualControl")
                        .HasColumnType("text")
                        .HasColumnName("actualcontrol");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int?>("Controlformat")
                        .HasColumnType("integer")
                        .HasColumnName("controlformat");

                    b.Property<int?>("Controlfrequency")
                        .HasColumnType("integer")
                        .HasColumnName("controlfrequency");

                    b.Property<int?>("Controltype")
                        .HasColumnType("integer")
                        .HasColumnName("controltype");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("Editby")
                        .HasColumnType("integer")
                        .HasColumnName("editby");

                    b.Property<DateTime?>("Editdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("editdate");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Processid")
                        .HasColumnType("integer")
                        .HasColumnName("processid");

                    b.Property<string>("RelateStep")
                        .HasColumnType("text")
                        .HasColumnName("relatestep");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int?>("Unitid")
                        .HasColumnType("integer")
                        .HasColumnName("unitid");

                    b.HasKey("Id");

                    b.ToTable("CAT_CONTROL");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Category.CatDetectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdat");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deletedat");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modifiedat");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("CAT_DETECT_TYPE");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Category.CatRiskLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdat");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deletedat");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modifiedat");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("CAT_RISK_LEVEL");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.ControlDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("controlid")
                        .HasColumnType("integer");

                    b.Property<Guid>("documentid")
                        .HasColumnType("uuid");

                    b.Property<int?>("flag")
                        .HasColumnType("integer")
                        .HasColumnName("flag");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.HasKey("Id");

                    b.HasIndex("controlid");

                    b.HasIndex("documentid");

                    b.ToTable("CONTROL_DOCUMENT");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("Code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("UserCreate");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("Deleted");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<int?>("DomainId")
                        .HasColumnType("integer")
                        .HasColumnName("DomainId");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModified");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("ModifiedBy");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int?>("ObjectClassId")
                        .HasColumnType("integer")
                        .HasColumnName("ObjectClassId");

                    b.Property<string>("ObjectClassName")
                        .HasColumnType("text")
                        .HasColumnName("ObjectClassName");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("ParentId");

                    b.Property<string>("ParentName")
                        .HasColumnType("text")
                        .HasColumnName("ParentName");

                    b.HasKey("Id");

                    b.HasIndex("ObjectClassId");

                    b.ToTable("AUDIT_FACILITY");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Document", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("publicdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("status")
                        .HasColumnType("boolean");

                    b.Property<int?>("unit_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("DOCUMENT");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.DocumentFile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FileType")
                        .HasColumnType("text")
                        .HasColumnName("file_type");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<Guid>("documentid")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.HasIndex("documentid");

                    b.ToTable("DOCUMENT_FILE");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.FacilityRequestMonitorMapping", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("audit_facility_id")
                        .HasColumnType("integer");

                    b.Property<string>("audit_facility_name")
                        .HasColumnType("text");

                    b.Property<int>("audit_request_monitor_id")
                        .HasColumnType("integer");

                    b.Property<string>("comment")
                        .HasColumnType("text");

                    b.Property<string>("process_status")
                        .HasColumnType("text");

                    b.Property<int>("type")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("audit_request_monitor_id");

                    b.ToTable("FACILITY_REQUEST_MONITOR_MAPPING");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Action")
                        .HasColumnType("text")
                        .HasColumnName("action");

                    b.Property<string>("Ancestor")
                        .HasColumnType("text")
                        .HasColumnName("ancestor");

                    b.Property<string>("CodeName")
                        .HasColumnType("text")
                        .HasColumnName("code_name");

                    b.Property<string>("Controller")
                        .HasColumnType("text")
                        .HasColumnName("controller");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<string>("DefaultUrl")
                        .HasColumnType("text")
                        .HasColumnName("default_url");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Icon")
                        .HasColumnType("text")
                        .HasColumnName("icon");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsConfigApproval")
                        .HasColumnType("boolean")
                        .HasColumnName("is_config");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<bool?>("IsMenu")
                        .HasColumnType("boolean")
                        .HasColumnName("is_menu");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<int?>("ParentID")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnName("sort_order");

                    b.HasKey("Id");

                    b.ToTable("MENU");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CodeName")
                        .HasColumnType("text")
                        .HasColumnName("code_name");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<int?>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("PERMISSION");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.RolePermissionMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("menu_id")
                        .HasColumnType("integer");

                    b.Property<int?>("permission_id")
                        .HasColumnType("integer");

                    b.Property<int?>("role_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("menu_id");

                    b.HasIndex("permission_id");

                    b.HasIndex("role_id");

                    b.ToTable("ROLE_PERMISSION_MENU");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("ROLES");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.SystemParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Default_Note")
                        .HasColumnType("text")
                        .HasColumnName("default_note");

                    b.Property<string>("Default_Value")
                        .HasColumnType("text")
                        .HasColumnName("default_value");

                    b.Property<DateTime?>("Modified_At")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("Modified_By")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("Parameter_Name")
                        .HasColumnType("text")
                        .HasColumnName("parameter_name");

                    b.Property<DateTime?>("Reset_At")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("reset_at");

                    b.Property<string>("Sub_System")
                        .HasColumnType("text")
                        .HasColumnName("sub_system");

                    b.Property<string>("Value")
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("SYSTEM_PARAMETER");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.UnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdBy");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deletedAt");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedBy");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modifiedAt");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedBy");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("UNIT_TYPE");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Avartar")
                        .HasColumnType("text")
                        .HasColumnName("avartar");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<int?>("DataSource")
                        .HasColumnType("integer")
                        .HasColumnName("data_source");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_of_joining");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer")
                        .HasColumnName("department_id");

                    b.Property<int?>("DomainId")
                        .HasColumnType("integer")
                        .HasColumnName("domain_Id");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastOnline")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_online_at");

                    b.Property<DateTime?>("LastPassChange")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_pass_change");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<string>("SaltKey")
                        .HasColumnType("text")
                        .HasColumnName("salt");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.Property<int?>("UsersType")
                        .HasColumnType("integer")
                        .HasColumnName("users_type");

                    b.HasKey("Id");

                    b.ToTable("USERS");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.UsersGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("USERS_GROUP");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.UsersGroupMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("group_id")
                        .HasColumnType("integer");

                    b.Property<int?>("users_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("group_id");

                    b.HasIndex("users_id");

                    b.ToTable("USERS_GROUP_MAPPING");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.UsersGroupRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("group_id")
                        .HasColumnType("integer");

                    b.Property<int?>("roles_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("group_id");

                    b.HasIndex("roles_id");

                    b.ToTable("USERS_GROUP_ROLES");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.UsersRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("roles_id")
                        .HasColumnType("integer");

                    b.Property<int?>("users_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("roles_id");

                    b.HasIndex("users_id");

                    b.ToTable("USERS_ROLES");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.UsersWorkHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_of_joining");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("integer")
                        .HasColumnName("department_id");

                    b.Property<int?>("users_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("users_id");

                    b.ToTable("USERS_WORK_HISTORY");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.ApprovalConfig", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Menu", "Menu")
                        .WithMany("ApprovalConfig")
                        .HasForeignKey("item_id");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.ApprovalFunction", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("approver");

                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Users", "Users_Last")
                        .WithMany()
                        .HasForeignKey("approver_last");

                    b.Navigation("Users");

                    b.Navigation("Users_Last");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.AuditDetect", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Category.CatDetectType", "CatDetectType")
                        .WithMany()
                        .HasForeignKey("classify_audit_detect");

                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("followers");

                    b.Navigation("CatDetectType");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.AuditPlan", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("approval_user");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.AuditRequestMonitor", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.AuditDetect", "AuditDetect")
                        .WithMany()
                        .HasForeignKey("detectid");

                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("userid");

                    b.Navigation("AuditDetect");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.ControlDocument", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Category.CatControl", "CatControl")
                        .WithMany()
                        .HasForeignKey("controlid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Document", "Document")
                        .WithMany()
                        .HasForeignKey("documentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatControl");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Department", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("ObjectClassId");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.DocumentFile", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Document", "Document")
                        .WithMany("DocumentFile")
                        .HasForeignKey("documentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.FacilityRequestMonitorMapping", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.AuditRequestMonitor", "AuditRequestMonitor")
                        .WithMany("FacilityRequestMonitorMapping")
                        .HasForeignKey("audit_request_monitor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditRequestMonitor");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.RolePermissionMenu", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("menu_id");

                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("permission_id");

                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("role_id");

                    b.Navigation("Menu");

                    b.Navigation("Permission");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.UsersGroupMapping", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.UsersGroup", "UsersGroup")
                        .WithMany("UsersGroupMappings")
                        .HasForeignKey("group_id");

                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Users", "Users")
                        .WithMany("UsersGroupMappings")
                        .HasForeignKey("users_id");

                    b.Navigation("Users");

                    b.Navigation("UsersGroup");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.UsersGroupRoles", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.UsersGroup", "UsersGroup")
                        .WithMany("UsersGroupRoles")
                        .HasForeignKey("group_id");

                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Roles", "Roles")
                        .WithMany("UsersGroupRoles")
                        .HasForeignKey("roles_id");

                    b.Navigation("Roles");

                    b.Navigation("UsersGroup");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.UsersRoles", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Roles", "Roles")
                        .WithMany("UsersRoles")
                        .HasForeignKey("roles_id");

                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Users", "Users")
                        .WithMany("UsersRoles")
                        .HasForeignKey("users_id");

                    b.Navigation("Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.UsersWorkHistory", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("users_id");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.AuditRequestMonitor", b =>
                {
                    b.Navigation("FacilityRequestMonitorMapping");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Document", b =>
                {
                    b.Navigation("DocumentFile");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Menu", b =>
                {
                    b.Navigation("ApprovalConfig");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Roles", b =>
                {
                    b.Navigation("UsersGroupRoles");

                    b.Navigation("UsersRoles");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Users", b =>
                {
                    b.Navigation("UsersGroupMappings");

                    b.Navigation("UsersRoles");
                });

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.UsersGroup", b =>
                {
                    b.Navigation("UsersGroupMappings");

                    b.Navigation("UsersGroupRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
